<?xml version="1.0" encoding="UTF-8"?>
<project name="propertyexplorer" default="all">
  
  
  <property file="build.properties"/>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <!-- 
  <property name="skip.tests" value="true"/>
   -->
  
  <!-- Compiler options -->
  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="700m"/>
  <patternset id="ignored.files">
    <exclude name="**/*.hprof/**"/>
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/*.rbc/**"/>
    <exclude name="**/*.yarb/**"/>
    <exclude name="**/*~/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/CVS/**"/>
    <exclude name="**/__pycache__/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/vssver.scc/**"/>
    <exclude name="**/vssver2.scc/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.egg"/>
    <include name="*.jar"/>
    <include name="*.ear"/>
    <include name="*.swc"/>
    <include name="*.war"/>
    <include name="*.zip"/>
    <include name="*.ane"/>
  </patternset>
  <patternset id="compiler.resources">
    <exclude name="**/?*.java"/>
    <exclude name="**/?*.form"/>
    <exclude name="**/?*.class"/>
    <exclude name="**/?*.groovy"/>
    <exclude name="**/?*.scala"/>
    <exclude name="**/?*.flex"/>
    <exclude name="**/?*.kt"/>
    <exclude name="**/?*.clj"/>
    <exclude name="**/?*.aj"/>
    <exclude name="**/?*.xml"/>
  </patternset>
  
  <!-- JDK definitions -->
  
  <property name="jdk.bin.1.8_(1)" value="${jdk.home.1.8_(1)}/bin"/>
  <path id="jdk.classpath.1.8_(1)">
    <fileset dir="${jdk.home.1.8_(1)}">
      <include name="jre/lib/charsets.jar"/>
      <include name="jre/lib/deploy.jar"/>
      <include name="jre/lib/ext/access-bridge-64.jar"/>
      <include name="jre/lib/ext/cldrdata.jar"/>
      <include name="jre/lib/ext/dnsns.jar"/>
      <include name="jre/lib/ext/jaccess.jar"/>
      <include name="jre/lib/ext/jfxrt.jar"/>
      <include name="jre/lib/ext/localedata.jar"/>
      <include name="jre/lib/ext/nashorn.jar"/>
      <include name="jre/lib/ext/sunec.jar"/>
      <include name="jre/lib/ext/sunjce_provider.jar"/>
      <include name="jre/lib/ext/sunmscapi.jar"/>
      <include name="jre/lib/ext/sunpkcs11.jar"/>
      <include name="jre/lib/ext/zipfs.jar"/>
      <include name="jre/lib/javaws.jar"/>
      <include name="jre/lib/jce.jar"/>
      <include name="jre/lib/jfr.jar"/>
      <include name="jre/lib/jfxswt.jar"/>
      <include name="jre/lib/jsse.jar"/>
      <include name="jre/lib/management-agent.jar"/>
      <include name="jre/lib/plugin.jar"/>
      <include name="jre/lib/resources.jar"/>
      <include name="jre/lib/rt.jar"/>
    </fileset>
  </path>
  
  <property name="project.jdk.home" value="${jdk.home.1.8_(1)}"/>
  <property name="project.jdk.bin" value="${jdk.bin.1.8_(1)}"/>
  <property name="project.jdk.classpath" value="jdk.classpath.1.8_(1)"/>
  
  
  <!-- Project Libraries -->
  
  <path id="library.+libs.classpath">
    <fileset dir="${basedir}/+libs">
      <patternset refid="library.patterns"/>
    </fileset>
  </path>
  
  <path id="library.+libs1.classpath">
    <pathelement location="${basedir}/+libs/commons-lang3-3.7.jar"/>
    <pathelement location="${basedir}/+libs/commons-text-1.2.jar"/>
    <pathelement location="${basedir}/+libs/ejml-0.23-src.zip"/>
    <pathelement location="${basedir}/+libs/ejml-0.23.jar"/>
    <pathelement location="${basedir}/+libs/javax.json-api-1.0-sources.jar"/>
    <pathelement location="${basedir}/+libs/javax.json.jar"/>
    <pathelement location="${basedir}/+libs/joda-time-2.9-sources.jar"/>
    <pathelement location="${basedir}/+libs/joda-time.jar"/>
    <pathelement location="${basedir}/+libs/jollyday-0.4.9-sources.jar"/>
    <pathelement location="${basedir}/+libs/jollyday.jar"/>
    <pathelement location="${basedir}/+libs/json-simple-1.1.1.jar"/>
    <pathelement location="${basedir}/+libs/opencsv-4.1.jar"/>
    <pathelement location="${basedir}/+libs/protobuf.jar"/>
    <pathelement location="${basedir}/+libs/slf4j-api.jar"/>
    <pathelement location="${basedir}/+libs/slf4j-simple.jar"/>
    <pathelement location="${basedir}/+libs/stanford-corenlp-3.9.1-javadoc.jar"/>
    <pathelement location="${basedir}/+libs/stanford-corenlp-3.9.1-models.jar"/>
    <pathelement location="${basedir}/+libs/stanford-corenlp-3.9.1-sources.jar"/>
    <pathelement location="${basedir}/+libs/stanford-corenlp-3.9.1.jar"/>
    <pathelement location="${basedir}/+libs/xom-1.2.10-src.jar"/>
    <pathelement location="${basedir}/+libs/xom.jar"/>
  </path>
  <!-- Register Custom Compiler Taskdefs -->
  <property name="javac2.home" value="${idea.home}/lib"/>
  <path id="javac2.classpath">
    <fileset dir="${javac2.home}">
      <include name="javac2.jar"/>
      <include name="jdom.jar"/>
      <include name="asm-all*.jar"/>
      <include name="jgoodies-forms.jar"/>
    </fileset>
  </path>
  <target name="register.custom.compilers">
    <taskdef name="javac2" classname="com.intellij.ant.Javac2" classpathref="javac2.classpath"/>
    <taskdef name="instrumentIdeaExtensions" classname="com.intellij.ant.InstrumentIdeaExtensions" classpathref="javac2.classpath"/>
  </target>
  
  <!-- Modules -->
  
  
  <!-- Module PropertyExplorer -->
  
  <dirname property="module.propertyexplorer.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.propertyexplorer" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.propertyexplorer" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.propertyexplorer" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.propertyexplorer" value="-encoding UTF-8 -source 8 -target 8 ${compiler.args}"/>
  
  <property name="propertyexplorer.output.dir" value="${module.propertyexplorer.basedir}/out/production/PropertyExplorer"/>
  <property name="propertyexplorer.testoutput.dir" value="${module.propertyexplorer.basedir}/out/test/PropertyExplorer"/>
  
  <path id="propertyexplorer.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="propertyexplorer.module.production.classpath">
    <path refid="${module.jdk.classpath.propertyexplorer}"/>
    <path refid="library.+libs1.classpath"/>
    <pathelement location="${idea.home}/lib/hamcrest-core-1.3.jar"/>
    <pathelement location="${idea.home}/lib/junit-4.12.jar"/>
    <path refid="library.+libs.classpath"/>
  </path>
  
  <path id="propertyexplorer.runtime.production.module.classpath">
    <pathelement location="${propertyexplorer.output.dir}"/>
    <path refid="library.+libs1.classpath"/>
    <pathelement location="${idea.home}/lib/hamcrest-core-1.3.jar"/>
    <pathelement location="${idea.home}/lib/junit-4.12.jar"/>
    <path refid="library.+libs.classpath"/>
  </path>
  
  <path id="propertyexplorer.module.classpath">
    <path refid="${module.jdk.classpath.propertyexplorer}"/>
    <pathelement location="${propertyexplorer.output.dir}"/>
    <path refid="library.+libs1.classpath"/>
    <pathelement location="${idea.home}/lib/hamcrest-core-1.3.jar"/>
    <pathelement location="${idea.home}/lib/junit-4.12.jar"/>
    <path refid="library.+libs.classpath"/>
  </path>
  
  <path id="propertyexplorer.runtime.module.classpath">
    <pathelement location="${propertyexplorer.testoutput.dir}"/>
    <pathelement location="${propertyexplorer.output.dir}"/>
    <path refid="library.+libs1.classpath"/>
    <pathelement location="${idea.home}/lib/hamcrest-core-1.3.jar"/>
    <pathelement location="${idea.home}/lib/junit-4.12.jar"/>
    <path refid="library.+libs.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.propertyexplorer">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.propertyexplorer">
    <patternset refid="excluded.from.module.propertyexplorer"/>
  </patternset>
  
  <path id="propertyexplorer.module.sourcepath">
    <dirset dir="${module.propertyexplorer.basedir}">
      <include name="res"/>
      <include name="src/main"/>
    </dirset>
  </path>
  
  <path id="propertyexplorer.module.test.sourcepath">
    <dirset dir="${module.propertyexplorer.basedir}">
      <include name="src/test"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.propertyexplorer" depends="compile.module.propertyexplorer.production,compile.module.propertyexplorer.tests" description="Compile module PropertyExplorer"/>
  
  <target name="compile.module.propertyexplorer.production" depends="register.custom.compilers" description="Compile module PropertyExplorer; production classes">
    <mkdir dir="${propertyexplorer.output.dir}"/>
    <javac2 destdir="${propertyexplorer.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.propertyexplorer}/javac">
      <compilerarg line="${compiler.args.propertyexplorer}"/>
      <bootclasspath refid="propertyexplorer.module.bootclasspath"/>
      <classpath refid="propertyexplorer.module.production.classpath"/>
      <src refid="propertyexplorer.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.propertyexplorer"/>
    </javac2>
    
    <copy todir="${propertyexplorer.output.dir}">
      <fileset dir="${module.propertyexplorer.basedir}/res">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.propertyexplorer.basedir}/src/main">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.propertyexplorer.tests" depends="register.custom.compilers,compile.module.propertyexplorer.production" description="compile module PropertyExplorer; test classes" unless="skip.tests">
    <mkdir dir="${propertyexplorer.testoutput.dir}"/>
    <javac2 destdir="${propertyexplorer.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.propertyexplorer}/javac">
      <compilerarg line="${compiler.args.propertyexplorer}"/>
      <bootclasspath refid="propertyexplorer.module.bootclasspath"/>
      <classpath refid="propertyexplorer.module.classpath"/>
      <src refid="propertyexplorer.module.test.sourcepath"/>
      <patternset refid="excluded.from.compilation.propertyexplorer"/>
    </javac2>
    
    <copy todir="${propertyexplorer.testoutput.dir}">
      <fileset dir="${module.propertyexplorer.basedir}/src/test">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="clean.module.propertyexplorer" description="cleanup module">
    <delete dir="${propertyexplorer.output.dir}"/>
    <delete dir="${propertyexplorer.testoutput.dir}"/>
  </target>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.propertyexplorer" description="cleanup all"/>
  
  <target name="build.modules" depends="init, clean, compile.module.propertyexplorer" description="build all modules"/>
  
  <target name="init.artifacts">
    <property name="artifacts.temp.dir" value="${basedir}/__artifacts_temp"/>
    <property name="artifact.output.propertyexplorer:jar" value="${basedir}/out/artifacts/PropertyExplorer_jar"/>
    <mkdir dir="${artifacts.temp.dir}"/>
    <property name="temp.jar.path.PropertyExplorer.jar" value="${artifacts.temp.dir}/PropertyExplorer.jar"/>
  </target>
  
  <target name="artifact.propertyexplorer:jar" depends="init.artifacts, compile.module.propertyexplorer" description="Build &#39;PropertyExplorer:jar&#39; artifact">
    <property name="artifact.temp.output.propertyexplorer:jar" value="${artifacts.temp.dir}/PropertyExplorer_jar"/>
    <mkdir dir="${artifact.temp.output.propertyexplorer:jar}"/>
    <jar destfile="${temp.jar.path.PropertyExplorer.jar}" duplicate="preserve" filesetmanifest="mergewithoutmain">
      <zipfileset dir="${propertyexplorer.output.dir}"/>
      <zipfileset src="${idea.home}/lib/junit-4.12.jar"/>
      <zipfileset src="${idea.home}/lib/hamcrest-core-1.3.jar"/>
      <zipfileset src="${basedir}/+libs/stanford-corenlp-3.9.1-models.jar"/>
      <zipfileset src="${basedir}/+libs/stanford-corenlp-3.9.1.jar"/>
      <zipfileset src="${basedir}/+libs/xom-1.2.10-src.jar"/>
      <zipfileset src="${basedir}/+libs/xom.jar"/>
      <zipfileset src="${basedir}/+libs/jollyday-0.4.9-sources.jar"/>
      <zipfileset src="${basedir}/+libs/slf4j-simple.jar"/>
      <zipfileset src="${basedir}/+libs/commons-text-1.2.jar"/>
      <zipfileset src="${basedir}/+libs/opencsv-4.1.jar"/>
      <zipfileset src="${basedir}/+libs/protobuf.jar"/>
      <zipfileset src="${basedir}/+libs/joda-time-2.9-sources.jar"/>
      <zipfileset src="${basedir}/+libs/slf4j-api.jar"/>
      <zipfileset src="${basedir}/+libs/stanford-corenlp-3.9.1-javadoc.jar"/>
      <zipfileset src="${basedir}/+libs/joda-time.jar"/>
      <zipfileset src="${basedir}/+libs/javax.json.jar"/>
      <zipfileset src="${basedir}/+libs/ejml-0.23-src.zip"/>
      <zipfileset src="${basedir}/+libs/javax.json-api-1.0-sources.jar"/>
      <zipfileset src="${basedir}/+libs/jollyday.jar"/>
      <zipfileset src="${basedir}/+libs/commons-lang3-3.7.jar"/>
      <zipfileset src="${basedir}/+libs/ejml-0.23.jar"/>
      <zipfileset src="${basedir}/+libs/json-simple-1.1.1.jar"/>
      <zipfileset src="${basedir}/+libs/stanford-corenlp-3.9.1-sources.jar"/>
      <zipfileset file="${basedir}/config.xml"/>
    </jar>
    <copy file="${temp.jar.path.PropertyExplorer.jar}" tofile="${artifact.temp.output.propertyexplorer:jar}/PropertyExplorer.jar"/>
  </target>
  
  <target name="build.all.artifacts" depends="artifact.propertyexplorer:jar" description="Build all artifacts">
    <mkdir dir="${artifact.output.propertyexplorer:jar}"/>
    <copy todir="${artifact.output.propertyexplorer:jar}">
      <fileset dir="${artifact.temp.output.propertyexplorer:jar}"/>
    </copy>
    
    <!-- Delete temporary files -->
    <delete dir="${artifacts.temp.dir}"/>
  </target>
  
  <target name="all" depends="build.modules, build.all.artifacts" description="build all"/>
</project>